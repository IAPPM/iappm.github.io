{"version":3,"sources":["img/logo.png","components/header.js","Layout/home.js","components/form.js","graph/Graph.js","graph/funcoes.js","graph/data.js","components/pdfGenerator.js","Layout/metodologia.js","Layout/contato.js","Views/Home.js","firebase/firebase.js","firebase/contextauth.js","Layout/login.js","App.js","reportWebVitals.js","index.js"],"names":["header","className","role","aria-label","href","src","logo","alt","width","height","aria-expanded","data-target","onClick","document","querySelector","classList","toggle","aria-hidden","id","Home","style","paddingInline","color","paddingBottom","Form","props","useState","txt","settxt","assunto","setassunto","ignoreWord","setIgnoreWord","swichChoose","setswichChoose","noValidate","autoComplete","TextField","fullWidth","label","onChange","e","target","value","marginTop","multiline","rows","rowsMax","variant","Switch","checked","analisar","setTimeout","myChart","require","Graph","title","data","datasets","swichChooseLegend","setswichChooselegend","swichChooseTitle","setswichChooseTitle","setWidth","setHeight","setBackgroundColor","setConfig","type","labels","backgroundColor","options","legend","display","position","align","padding","usePointStyle","boxWidth","boxHeight","text","font","size","elements","arc","borderWidth","borderColor","plugins","worldContFinal","worldNoRepet","colorsRandom","randomColor","r","Math","floor","random","g","b","ig","resultado","split","forEach","w","toUpperCase","replaceAll","setWorld","setCont","dataInicial","reducer","state","action","hoverBackgroundColor","console","log","addcont","dispatch","ignorelist","world","i","connectors","trim","separation","replace","Removepunctuation","Set","filter","x","length","toFixed","c","j","wordCounter","styles","StyleSheet","create","page","flexDirection","section","margin","flexGrow","sectiontwo","fontSize","flexWrap","maxHeight","marginBottom","flex","linhas","list","textList","MyDocument","listWorld","push","textAlign","Date","hh","getHours","mn","getMinutes","aa","getFullYear","mm","getMonth","dd","getDate","alignSelf","Metodologia","useReducer","toggleGraphModal","alignItems","justifyContent","modal","maxWidth","fileName","blob","url","loading","error","borderRadius","zIndex","Contato","history","useHistory","logged","app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","onAuthStateChanged","user","Login","stateLogin","setloguin","StatePass","setpass","stateerror","seterror","authlogin","login","pass","signInWithEmailAndPassword","then","click","catch","minWidth","App","setlogger","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f432fb60.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.4d5d0c98.png\";","import React from 'react'\nimport logo from '../img/logo.png'\n\nexport default function header(){\n    function toggleBurgerMenu() {\n        document.querySelector('.navbar-menu').classList.toggle('is-active');\n      }\n    return(\n        //Navbar icone do app\n        <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n            <div className=\"navbar-brand paddingMenu\" >\n                <a className=\"navbar-item\" href=\"/#\" >\n                    <img src={logo} alt=\"Logo\" width=\"125\" height=\"28\" />                    \n                </a>\n\n            {/* Responsivo */}\n                <button className=\"navbar-burger button is-white\" aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbarBasicExample\" onClick={toggleBurgerMenu} >\n                    <span aria-hidden=\"true\"></span>\n                    <span aria-hidden=\"true\"></span>\n                    <span aria-hidden=\"true\"></span>\n                </button>\n            </div>\n            {/* Menu do app */}\n            <div className=\"navbar-menu\" id=\"navbarBasicExample\">\n                <div className=\"navbar-start paddingMenu\">\n                    <a href=\"#home\" className=\"navbar-item\">INÍCIO</a>                \n                    <a href=\"#metodologia\" className=\"navbar-item\">METODOLOGIA</a>\n                    <a href=\"#contato\" className=\"navbar-item\">CONTATO</a>\n                </div> \n            </div>\n        </nav>\n    )\n}","import React from 'react'\nimport './layout.css'\nimport \"bulma\";\n\n//componentes\nimport Header from './../components/header'\nimport { BiChevronsDown } from \"react-icons/bi\";\n\nexport default function Home() {\n    return(\n        <nav className=\"hero is-fullheight background\" id=\"home\">\n            <div className=\"hero-head\">\n                <Header />\n            </div>\n            \n            <div className=\"hero-body\">\n                <div className=\"container has-text-centered \" style={{ paddingInline:\"10%\"}} >\n                    <p className=\"title is-size-2-fullhd is-size-4-mobile is-size-4-touch \" style={{color:\"#2b2b2b\"}} >INTERLOCUÇÃO E AUTONOMIA NAS <br /> PRÁTICAS DE PESQUISAS MARGINAIS</p>\n                    <p className=\"subtitle is-size-5-fullhd is-size-7-mobile is-size-7-touch is-size-6-desktop\" style={{color:\"#2b2b2b\"}} >Visando contribuir para o debate envolvendo gênero, raça e sexualidade, o Grupo de Estudos em Geografia Humana Aplicada, através da metodologia científica de análise de conteúdo, desenvolveu este programa para a elaboração de gráficos que possibilitem uma análise mais ampla e rica das subjetividades contidas em diversas palavras.</p>\n                </div>\n            </div>\n\n            <div className=\"hero-foot\" style={{ paddingBottom: \"15px\"}} >\n                <div className=\"container has-text-centered\">\n                    <BiChevronsDown className=\"CircleYellon\" style={{width:\"40px\", height:\"40px\", color:\"#fff\" }} />\n                </div>\n            </div>\n            \n        </nav>\n    )\n}\n","import {useState} from \"react\"\nimport { TextField, Switch } from '@material-ui/core';\n\nconst Form = props => {\n    const [txt, settxt] = useState(\"\")\n    const [assunto, setassunto] = useState(\"\")\n    const [ignoreWord, setIgnoreWord] = useState(\"\")\n    const [swichChoose, setswichChoose] = useState(\"\")\n    function handleAnalisar(){\n        props.analisar(txt, assunto, ignoreWord, swichChoose)\n        toggleLoad()\n    }\n\n    function toggleLoad() {\n        document.querySelector('#Analisar').classList.toggle('is-loading');\n        document.querySelector('#Analisar').classList.toggle('is-warning');\n        setTimeout(()=>{ \n            document.querySelector('#Analisar').classList.toggle('is-loading'); \n            document.querySelector('#Analisar').classList.toggle('is-warning');\n        },1000)\n    }\n    return(\n        <nav className=\"forms\" >\n            <div className=\"field\" >\n                <div className=\"control\">\n                    <form className=\"textdforms\" noValidate autoComplete=\"off\">\n                        <TextField id=\"standard-basic\" fullWidth label=\"Assunto\"  onChange={e => setassunto(e.target.value) } />\n                        <TextField id=\"standard-basic\" fullWidth label=\"Palavras ignoradas\" style={{marginTop: '35px'}} onChange={e => setIgnoreWord(e.target.value)} />\n                        <p className=\"is-size-7-fullhd is-size-7-desktop is-size-full-7 mt-2 has-text-danger\" >Coloque aqui as palavras que deseja que não seja analisadas no texto. <br />Use entre ponto e virgula, ex.: palavra; palavra; </p>\n                        <TextField id=\"outlined-multiline-static\" \n                            fullWidth label=\"Espaço reservado para o texto\" \n                            multiline\n                            rows={10}\n                            rowsMax={30}\n                            variant=\"outlined\"\n                            style={{marginTop: '35px', height:'100%' }}\n                            value={txt}\n                            onChange={e => settxt(e.target.value) }\n                        />\n                        <p className=\"is-size-6 mt-2 has-text-danger\" ></p>\n                        \n                        <div className=\"level\">\n                            <div className=\"level-left\">\n                                <div className=\"level-item\">\n                                    <a href=\"#Metodologia\" className=\"button\" style={{marginTop: '35px'}} onClick={e => settxt(\"\") } >Limpar</a>\n                                </div>\n                            </div>\n                            <div className=\"level-item\" style={{marginTop: '35px'}} >\n                                <label> Inteiro </label>\n                                <Switch color=\"secondary\" onChange={e => setswichChoose(e.target.checked)  } />\n                                <label> Porcentagem </label>\n                            </div>\n\n                            <div className=\"level-rigth\" id=\"form\" >\n                                <div className=\"level-item\">\n                                    <a href=\"#Metodologia\" className=\"button\" id=\"Analisar\" style={{marginTop: '35px'}} onClick={handleAnalisar} > Analisar</a>\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                    <div className=\"notification is-primary mt-5\" >\n                        Ao trocar entre inteiro e porcentagem, e necessario analisar novamente!\n                    </div>\n                </div>\n            </div>\n        </nav>\n        \n    )\n}\nexport default Form;","import React from 'react'\nimport {useState} from \"react\"\nimport { PolarArea } from 'react-chartjs-2';\nimport { Switch } from '@material-ui/core';\nconst ChartJsImage = require('chartjs-to-image');\nconst myChart = new ChartJsImage();\n\nconst Graph = props => {\n    const title = props.data.datasets[0].label\n    const [swichChooseLegend, setswichChooselegend] = useState(true)\n    const [swichChooseTitle, setswichChooseTitle] = useState(true)\n   \n    myChart.setWidth(2000).setHeight(2000).setBackgroundColor('transparent');\n    myChart.setConfig({\n        type:'polarArea',\n        data: {\n            labels: props.data.labels,\n            datasets:[{\n                label: props.data.datasets[0].label,\n                data: props.data.datasets[0].data,\n                backgroundColor: props.data.datasets[0].backgroundColor,\n            }]\n        },\n        height: 500,\n        width:500,\n        options:{\n            legend:{\n                display: swichChooseLegend ,\n                position: 'bottom',\n                align: 'center  ',\n                // maxWidth: 1 ,\n                // align: 'start',\n                labels: {\n                    padding: 10,\n                    usePointStyle: true,\n                    boxWidth: 30,\n                    boxHeight: 10,\n                },\n                title:{\n                    display: true,\n                    align: 'center', \n                    text: [title],\n                    font:{\n                        size:30,\n                    }\n                }\n                \n            },\n            elements:{\n                arc:{\n                    borderWidth: 10,\n                    borderColor:'rgba(255,253,255,0)'\n                }\n            }\n        }\n    })\n    return(\n        <div>\n            <PolarArea \n                type='polarArea'\n                data={props.data} \n                height={10} \n                width={10} \n                options={{\n                    plugins:{\n                        legend:{\n                            display: swichChooseLegend ,\n                            position: 'bottom',\n                            align: 'center  ',\n                            // maxWidth: 1 ,\n                            // align: 'start',\n                            labels: {\n                                padding: 10,\n                                usePointStyle: true,\n                                boxWidth: 30,\n                                boxHeight: 10,\n                            }\n                        },\n                        title:{\n                            display: swichChooseTitle,\n                            align: 'center', \n                            text: [title],\n                            font:{\n                                size:30,\n                            }\n                        }\n                    },\n                    elements:{\n                        arc:{\n                            borderWidth: 10,\n                            borderColor:'rgba(255,253,255,0)'\n                        }\n                    }\n                }} >\n                {/* <canvas id='mychars' ref={cofig} /> */}\n            </PolarArea>\n            <Switch color=\"secondary\" checked={swichChooseLegend} onChange={e => setswichChooselegend(e.target.checked)} />\n            <label>Ativar legenda</label>\n            <Switch color=\"secondary\" checked={swichChooseTitle} onChange={e => setswichChooseTitle(e.target.checked)} />\n            <label>Ativar titulo</label>\n        </div> \n    )\n\n}\n\nexport {\n    Graph,\n    myChart\n    \n}","/* \n    Reconstrução do tratamento do texto \n    Aqui vamos ter as funçoes:\n        Removepunctuation: Remove toda, e qualquer pontuação que tenha no texto, permitindo somente letras e numeros.\n        separation: remove espaços duplos ou triplos em uma string.\n        connectors: retorna o texto sem os conectores contidos em uma lista seleta\n        ignoreword: Função para ignorar palavras que estão na caixa de texto\n        wordCounter: Retorna duas string, uma com as palavras não repetidas, outra com a quantidade de vezes que essas palavras se repetiram.\n        randomColor: Função para criar cores randomicas.\n        getTitle: Pega o titulo recebido do campo.\n        setWorld: retorna um array com as palavras.\n        settxtContFinal: Retorna um array com a quantidade de repetições\n*/\n\n//Variaveis Globais\nlet worldContFinal = [] //variavel onde vai estar o array da quantidade de repetiçoes das palavras\nlet worldNoRepet = [] //variavel onde vai estar o aray dos resultados finais\nlet colorsRandom = [] //Resultado de todas as random colors gerado.\nlet title = \"\" //Titulo do grafico.\nconst getTitle = (t) => {title = t}\n\n\nconst randomColor = () => {\n    let r = Math.floor(Math.random() * 255) ; //gera um valor para o R do RGB\n    let g = Math.floor(Math.random() * 255) ; //gera um valor para o g do RGB\n    let b = Math.floor(Math.random() * 255) ; //gera um valor para o b do RGB\n    return `rgba(${r},${g},${b}, 0.5)` //retorna o RGB com os numeros aleatorios, criando assim uma cor aleatoria\n}\n\nconst Removepunctuation = (txt) => {\n        /*  Primeiramente deixa todas as letras maiusculas usando o  \"toUpperCase()\" para que evite erros.\n        Apos isso faz o replaceAll onde mantem todas as letras de A ate Z removendo qualquer pontuação.*/\n        let resultado = txt.toUpperCase().replace(/[^A-Za-z0-9áàâãéèêíïóôõöúçñÁÀÂÃÉÈÍÏÓÔÕÖÚÇÑz_ ]/gi, \" \") \n        return resultado\n}\n\nconst separation = (txt) => {\n        /*  Ultiliza o trim para remover todos os espaços a mais no começo e no final\n            Utiliza o replaceAll para remover todos os espaços duplos ou triplos colocando apenas um espaço.*/\n        let resultado = txt.trim().replaceAll(/( )+/g,' ')\n        return resultado;\n}\n\nconst connectors = (txt) => {\n        // Lista de conectores a serem iginorados na string\n        let conectores = [\" EM PRIMEIRO LUGAR \", \" ANTES DE MAIS NADA \", \" ANTES DE TUDO \", \" EM PRINCÍPIO \", \" PRIMEIRAMENTE \", \" ACIMA DE TUDO \", \" PRINCIPALMENTE \", \" PRIMORDIALMENTE \", \" SOBRETUDO \", \" A PRIORI \", \" A POSTERIORI \", \n                            \" PRECIPUAMENTE \", \" ENFIM \", \" LOGO DEPOIS \", \" IMEDIATAMENTE \", \" LOGO APÓS \", \" A PRINCÍPIO \", \" NO MOMENTO EM QUE \", \" POUCO ANTES \", \" POUCO DEPOIS \", \" ANTERIORMENTE \", \" POSTERIORMENTE \", \" EM SEGUIDA \", \n                            \" AFINAL \", \" POR FIM \", \" DA MESMA FORMA\", \" CADA VEZ QUE \", \" AO MESMO TEMPO \", \" DO MESMO MODO \", \" DE ACORDO COM\", \" TANTO QUANTO \", \" NÃO APENAS \", \" POR OUTRO LADO\", \" QUEM SABE \", \" SEM DÚVIDA \", \n                            \" DE REPENTE \", \" OU SEJA \", \" ISTO É \", \" POR EXEMPLO \", \" COM O FIM DE \", \" A FIM DE \", \" COMO PROPÓSITO \",  \" COM A FINALIDADE DE \", \" COM O INTUITO DE \", \" EM RESUMO \", \" DESSA FORMA \", \" DESSA MANEIRA \", \n                            \" DESSE MODO \", \" EM RESUMO \", \" POSTO QUE \", \" NO ENTANTO \", \" EM CONTRAPARTIDA \", \" APESAR DE \", \" MESMO QUE \", \" POR QUE \", \" PORQUE \", \" PORQUÊ \", \" POR QUÊ\", \" POIS \", \" POR MAIS \", \" POR MENOS \", \" DE \", \n                            \" DA \", \" DÁ \", \" DO \", \" E \", \" A \", \" É \", \" O \", \" ENTÃO \", \" SÓ \", \" SE \", \" COM \", \" EM \", \" Á \", \" ÁS \", \" POR \", \" PELA \", \" QUE \", \" OS \", \" AS \", \" OU \", \" QUE \", \" PARA \", \" ESSE \", \" AQUELE \", \" AO \", \n                            \" NO \", \" NA \", \" SÃO \", \" FOI \", \" FIZERAM \", \" SE \", \" ESTE\", \" COMO \", \" NA \", \" NO \", \" PODE \", \" DOS \", \" ESTÁ \", \" SEJA \", \" DAS \", \" DOS \", \" DES \", \" LO \", \" ASSIM \", \" DIZER \", \" AFINAL \", \" SEUS \", \n                            \" SUAS \", \" ESSES \", \" ESSAS \", \" NO \", \" NA \", \"SÃO \", \" DÁ \", \" DÓS \", \" LÓ \", \" LÁS \", \" LÓS \", \" LIS \", \" DÁ \", \" DÁS \", \" DÓS \", \" DÊS \", \" DUS \", \" SEJAM \", \" SERÁ \", \" DESSES \", \" DESSE \", \" DESSA \", \n                            \" INICIA \", \" O \", \" A \", \" AS \", \" OS \", \" TAL \", \" MODO \"]\n        let resultado = txt; //resultado recebe o texto por padrão.\n        //Repetição for, para repetir a quantiudade de conectores que tem.\n        conectores.forEach((i) =>{  \n            /*  Ele pega o resultado, que por padrão contem o txt,  e procura se nele existe o primeiro conector\n                subistiruindo-o por um espaço, apos isso reescreve o resultado com a nova string.*/\n            resultado = resultado.toUpperCase().replaceAll(i,\" \") \n        })\n        return resultado;\n}\nconst ignoreWord = (txt, ig) => {\n    let resultado = txt;\n    let listig = ig.split(\"; \")\n    listig.forEach((w)=>{\n        // console.log(\" \"+w+\" \")\n        resultado = resultado.toUpperCase().replaceAll(\" \"+w.toUpperCase()+\" \",\" \") \n    })\n    // console.log(resultado)\n    return resultado;\n}\n\nconst wordCounter = (txt, ignorelist, swichChoose) => {\n        //tratamento geral do texto\n        ignoreWord(txt, ignorelist)\n        let resultado = connectors(separation(ignoreWord(Removepunctuation(txt), ignorelist))) //Texto sendo tratado pelas funções\n        let world = resultado.split(\" \") //Onde o texto e separado em substring de palavras\n        worldContFinal = [] //zera o contador antes de recontar(Bug recorrente de continuar armazendo resultados anteriores)\n        worldNoRepet = [ ...new Set( world ) ] //cria um novo array retirando todas as palavras repetidas.\n        // console.log(swichChoose)\n        if(!swichChoose){ //Caso falso, ira analisar como numero inteiro.\n            worldNoRepet.forEach((w, i) => { //cria uma loop for com as palavras não repetidas.\n                worldContFinal[i] = world.filter((x) => x === w).length  //Olha para as palavras repetidas, e para as palavras gerais da frase, e conta quantas vezes cada palavra se repete.\n            });\n        }else{ //caso verdadero, ira analisar em porcentagem.\n            worldNoRepet.forEach((w, i) => { //cria uma loop for com as palavras não repetidas.\n                worldContFinal[i] = ((world.filter((x) => x === w).length / world.length)*100).toFixed(2)  //Olha para as palavras repetidas, e para as palavras gerais da frase, e conta quantas vezes cada palavra se repete.\n                console.log(worldContFinal[i])\n            });\n        }\n        worldNoRepet.forEach((c, j)=>{ //repete o numero de palavras para criar uma cor randomica para cada uma\n            colorsRandom[j] = randomColor() //cria uma cor aleatoria para cada palavra encontrada\n        })\n}\n//Pega o titulo e coloca em uma variavel global\n\n\n//retorna os valores da variavel\nfunction setWorld(){ return worldNoRepet } \nfunction setTitle(){ return title}\nfunction setCont(){ return worldContFinal }\nfunction setcolors(){ return colorsRandom }\n\nexport {\n    wordCounter,\n    getTitle,\n    randomColor,\n    setWorld,\n    setTitle,\n    setCont,\n    setcolors\n}","\nimport {wordCounter, getTitle, randomColor, setWorld, setTitle, setCont, setcolors}from \"./funcoes\"\nconst dataInicial = {\n    labels: [],\n    datasets:[{\n        label: 'contador de palavras',\n        data:[],\n        backgroundColor:[],\n    }]\n}\nfunction reducer(state, action){\n    switch(action.type){\n        case 'graphAtt':\n            return {...state,     \n                labels: setWorld(),\n                datasets: [ {label: setTitle(), data: setCont() , backgroundColor:setcolors(), hoverBackgroundColor:randomColor() }],\n            }\n        case 'empty':\n            return {...state,     \n                labels: [],\n                datasets: [ {data: [], backgroundColor:[]}] ,\n            }\n        default:\n            console.log(state)\n            return state\n    }\n}\nfunction addcont(dispatch, txt, title, ignoreWord, swichChoose){\n    \n    if(txt !== \"\"){\n        wordCounter(txt, ignoreWord, swichChoose)\n        getTitle(title)\n        dispatch({type: 'graphAtt'})\n    }else{\n        dispatch({type: 'empty'})\n    }\n}\n\nexport {\n    dataInicial,\n    reducer,\n    addcont,\n}","import { Page, Text, View ,Document, StyleSheet } from '@react-pdf/renderer';\nimport {setWorld, setCont}from \"./../graph/funcoes\"\n\nconst styles = StyleSheet.create({\n    page: {\n      flexDirection: 'column',\n      backgroundColor: '#ffffff',\n      // flexWrap: 'wrap',\n    },\n    section: {\n      margin: 10,\n      padding: 10,\n      flexGrow: 1,\n      flexDirection:'column'\n    },\n    sectiontwo:{\n      flexGrow: 1,\n      flexDirection:'row',\n      fontSize: 10,\n      flexWrap: 'wrap',\n      maxHeight: '90%',\n    },\n    title:{\n      fontSize:20,\n      color: '#474f67',\n      marginBottom: '2%',\n      width: '40%',\n      flex:5\n\n    },\n    linhas:{\n      width: '100%',\n      height: '2px',\n      backgroundColor: '#474f67'\n    },\n    list:{\n      flex: 1,\n      flexDirection:\"column\",\n      fontSize: '25px'\n    },\n    textList:{\n      margin: '5px',\n      flex:1,\n      flexDirection: 'column'\n    }\n  });\n  \n  //Create pdf\n  const MyDocument = props => {\n\n    const listWorld = []\n    //console.log(props.linkImage)\n    setWorld().forEach((w,i)=>{ \n      //let list=[[]]\n      // console.log(props.state)\n      listWorld.push( \n      <View style={{width: '25%', textAlign: \"justify\", flexDirection: \"row\" }} key={i} >\n        <Text style={{width:'70%', fontSize:'8'}} >{w}: </Text>\n        <Text > ({setCont()[i]})</Text>\n      </View> )\n    })\n    let data = new Date();\n    let hh = data.getHours();\n    let mn = data.getMinutes();\n    let aa = data.getFullYear();\n    let mm = data.getMonth();\n    let dd = data.getDate();\n\n    return (\n      <Document>\n        <Page size=\"A4\" style={styles.page}>\n          <View style={styles.section}> \n            <View style={{flexDirection: 'row' }} >\n                <Text style={styles.title} >Relatório de Metodologia</Text>\n                <Text style={{ fontSize: '10px', alignSelf:'center', flex:1 }} > {dd + '/' + (mm+1) + '/' + aa + ' ' + hh + ':' + mn} </Text>\n            </View>\n            <Text style={styles.linhas}>----------------------------------------------------------</Text>\n            <Text style={{fontSize:'10px', width:'100%', marginBottom: '5px', marginTop: '5px' }} >Palavras &nbsp;&nbsp;&nbsp; | &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Repetições &nbsp;&nbsp;&nbsp; Palavras &nbsp;&nbsp;&nbsp; | &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Repetições &nbsp;&nbsp;&nbsp; Palavras &nbsp;&nbsp;&nbsp; | &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Repetições &nbsp;&nbsp;&nbsp; Palavras &nbsp;&nbsp;&nbsp; | &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Repetições</Text>\n            <View style={styles.sectiontwo}>\n              {listWorld}\n            </View>\n          </View>\n        </Page>\n      </Document>\n    )    \n  }\n \n  \n  export default MyDocument","import {useReducer} from 'react'\nimport \"bulma\";\n\n//componentes\nimport Form from './../components/form'\nimport {Graph} from './../graph/Graph'\n//graph\nimport {dataInicial, reducer, addcont} from \"./../graph/data\"\nimport MyDocument from \"./../components/pdfGenerator\";\nimport { PDFDownloadLink } from '@react-pdf/renderer'\n\n\nconst Metodologia = props => {\n    const [state, dispatch] = useReducer(reducer, dataInicial)\n    function gettxt(txt, assunto, ignoreWord, swichChoose){\n        addcont(dispatch, txt, assunto, ignoreWord, swichChoose)\n    }\n    //Notificação no grafico\n    function toggleGraphModal() {\n        document.querySelector('.plus').classList.toggle('is-active');\n        setTimeout(()=>{ document.querySelector('.popup').classList.toggle('hide'); }, 1000)\n    }\n    return(\n        \n        <nav className=\"fullheight has-background-white\" id=\"metodologia\">\n            <div className=\"backgroundnavbar line\" > </div>\n              {/* NavBAr */}\n            <nav className=\"container is-fluid\" >\n                {/* corpo */}\n                <div className=\"container is-fluid\">\n                    <div className=\"container is-fluid\">\n                        <div className=\"container is-fluid\">\n                            <h1 className=\"title is-size-1\" style={{marginTop: \"1%\", color: '#474f67' }} >Metodologia</h1>\n                            <div className=\"linha marginbotton backgroundblue\" />\n                            <div className=\"columns\" style={{flex: 1, alignItems: 'center',  justifyContent: 'center'}} >\n                                <div className=\"column is-two-fifths\">\n                                    <Form analisar={gettxt} modal={toggleGraphModal} />\n                                </div>\n                                <div className=\"column has-text-centered mb-1\" style={{maxWidth: '75vh', maxHeight: '75vh', margin:'auto' }}>\n                                    <div className=\"container is-fluid\" >\n                                        <p className='mb-5 is-size-4' >  </p>\n                                        <Graph  data={state} />\n                                    </div>\n                                    <a href=\"#Metodologia\" className=\"button mt-5 m-5\" onClick={toggleGraphModal} >Mais detalhes</a>\n                                    <PDFDownloadLink document={<MyDocument />} fileName=\"somename.pdf\" className=\"button mt-5 m-5\" >\n                                            {({ blob, url, loading, error }) => (loading ? 'Loading document...' : 'Baixar pdf')}\n                                    </PDFDownloadLink>\n                                    {/* <a    target='blank' className=\"button mt-5 m-5\"  >Gerar pdf</a> */}\n                                </div> \n                            </div>\n                        </div>\n                    </div>\n                </div>\n           \n            \n                <div className=\"modal plus\">\n                <div className=\"modal-background \" />\n                    <div className=\"modal-content\" style={{width: '95%', height: '95%', borderRadius:'25px'}} >  \n                        <div className=\"modal-card\"  style={{width: '100%', height: '100%', borderRadius:'25px'}} >\n                            <section className=\"modal-card-body\">\n                                <div className=\"notification is-primary popup\" style={{position:\"absolute\", zIndex: 1000 }} >\n                                    Clique no <strong>X</strong> para fechar. <br /> Clique em cima da palavra para ocutar-la. <br /> Clique com o botão direito para salvar o grafico. <br /> Use ctrl + P para salvar como PDF.\n                                </div>\n                                <div className=\"container is-fluid has-background-white\" >\n                                    <p className='mb-5 is-size-3' style={{ textAlign:'center' }}  > </p>\n                                    <Graph  data={state} /> \n                                </div>\n                            </section>\n                        </div>\n                    </div>\n                    <button className=\"modal-close is-large\" aria-label=\"close\" onClick={toggleGraphModal} />\n                </div>\n            </nav>\n        </nav>\n        \n    )\n\n}\n\nexport default Metodologia;","import React from 'react'\n\nimport {SiInstagram } from \"react-icons/si\";\nimport {ImYoutube2} from \"react-icons/im\";\nimport './layout.css'\nimport \"bulma\";\n\nexport default function Contato(){\n    return(\n        <>\n        <nav className=\"is-fluid\" id=\"contato\" >\n            <div className=\"backgroundblue\" style={{width: '100%', height:'15px'}} ></div>\n            <div className=\"columns\">\n                <div className=\"column backgroundblue\" >\n                    <div className='hero'>\n                        {/* <div className=''> */}\n                            <div className='is-fluid'>\n                                <h1 className='title has-text-centered has-text-primary-light is-size-4-fullhd is-size-4-mobile is-size-4-touch' style={{marginTop: '1%' }} >GRUPO DE PESQUISA EM GEOGRAFIA HUMANA APLICADA</h1>\n                                <div className=\"linhaContato has-background-light\"  />\n                            </div>\n                            <div className='container is-fluid'>\n                                <p className='has-text-centered has-text-primary-light is-size-5-fullhd is-size-6-desktop is-size-5-mobile is-size-5-touch' >Local: Universidade Federal de São João Del Rei Campus Tancredo Neves (CTAN)</p>\n                                <p className='has-text-centered has-text-primary-light is-size-5-fullhd  is-size-7-desktop is-size-5-mobile is-size-5-touch' >Av. Visconde de Rio Preto S/Nº (BR494KM2) Colônia do Bengo, São João Del-Rei - MG CEP: 36301-36</p>\n                                <p className='has-text-centered has-text-primary-light is-size-5-fullhd is-size-6-desktop is-size-5-mobile is-size-5-touch' >Contato: ghap@ufsj.edu.br</p>\n                            </div>\n                        {/* </div> */}\n                    </div>\n                </div>\n                <div className=\"column has-background-light has-text-centered\">\n                    <div className='container is-fluid has-text-primary-black' style={{width:\"100%\" , margin:'auto'}} >\n                        {/* <a href='http://facebook.com' target='blank' style={{color: '#4a4a4a' }} > <SiFacebook style={{width:'60px', height:'60px', margin: '25px' }}/> </a> */}\n                        <a href='https://www.instagram.com/ghap.ufsj/' target='blank' style={{color: '#4a4a4a' }}><SiInstagram style={{width:'60px', height:'60px', margin: '25px' }} href='/#'/> </a>  \n                        <a href='https://www.youtube.com/channel/UCaXCHf2YgKM1oaXtLySCIcA' target='blank' style={{color: '#4a4a4a' }}><ImYoutube2 style={{width:'100px', height:'60px', margin: '25px' }} href='/#'/></a>\n                        <p style={{marginTop:'1%'}} className='has-text-centered has-text-grey is-size-5-fullhd is-size-5-mobile is-size-5-touch' >\n                        Copyright &#169; 2021, GHAP All rights reserved. <br />\n                            Emerson Junio Silva Costa - Isadora Silva Araújo\n                        </p> \n                        <p className='has-text-centered has-text-grey-lighter is-size-6-fullhd is-size-6-mobile is-size-6-touch'>v1.0 (beta)</p>\n                        \n                    </div>\n                </div>\n            </div>\n        </nav>\n        </>\n    )\n}","import Header from './../Layout/home'\nimport Metodologia from './../Layout/metodologia'\nimport Contato from './..//Layout/contato'\nimport {useHistory} from 'react-router-dom' //Router\n//import {Logged} from './../firebase/Data'\n\nexport default function Home(props){\n    let history = useHistory();\n    if(props.logged === false){\n        history.push(\"/\");\n    }\n    \n    return(\n        <div>\n            <Header />\n            <Metodologia />\n            <Contato />\n        </div>\n        \n    )\n    \n}","import firebase from 'firebase/app'\nimport 'firebase/auth'\n\nconst app = firebase.initializeApp({\n    apiKey: \"AIzaSyDFF0qhS7mpnNYbG0FrO5p_VlKyafsbXWc\",\n    authDomain: \"iappm-be9f6.firebaseapp.com\",\n    projectId: \"iappm-be9f6\",\n    storageBucket: \"iappm-be9f6.appspot.com\",\n    messagingSenderId: \"690021598175\",\n    appId: \"1:690021598175:web:a4938c019b2c55b1983a6a\",\n    measurementId: \"G-S25SBGPF7X\"\n})\n\nexport const auth = app.auth()\nexport default app","import { auth } from \"./firebase\";\n\n// const [currentUser, setCurrentUser] = useState()\n\nconst login = (login, pass) =>{\n    return auth.signInWithEmailAndPassword(login,pass)\n}\n\nconst unsubscribe = auth.onAuthStateChanged(user => {\n    return user\n})\n\nexport {\n    login,\n    unsubscribe\n}","import {useState } from 'react'\nimport './layout.css' \nimport \"bulma\"; //Bulma\nimport logo from '../img/logo.png' //Logo\nimport { TextField } from '@material-ui/core'; //MaterialUi\nimport { login } from \"./../firebase/contextauth\"; //Firebase\nimport {useHistory} from 'react-router-dom' //Router\n\nexport default function Login(props){\n\n    const [stateLogin, setloguin] = useState(\"\")\n    const [StatePass, setpass] = useState(\"\")\n    const [stateerror, seterror] = useState(false) \n    \n    let history = useHistory();\n    //Função de autenticação.\n\n    const authlogin = () => {\n        \n        login(stateLogin, StatePass).then(\n            () => { props.click(); history.push(\"/home\")},\n            \n        )\n        .catch(\n            () => {\n                seterror(true)\n        })\n        \n        \n    }\n\n    return(\n        <nav className=\"has-background-light\" style={{height:'100vh' }} >\n            <div className=\"columns is-centered\" >\n                <div className=\"card has-text-centered\" style={{minWidth: '25%', width: 'auto', borderRadius:'5%', marginTop:'10%'}} >\n\n                    <div className=\"card-content has-text-centered has-background-white\">\n                        <img className=\"my-5\" src={logo} alt=\"Logo\" width=\"125\" height=\"28\" />\n                    </div>\n                    <div className=\"card-content has-background-light\" >\n                        <div className=\"container pt-5 mx-6 has-text-centered mb-6\">\n                            {/* <h1 className=\"title is-size-5\" style={{width:'25%'}}> LOGIN </h1> */}\n                            <div className=\"notification is-danger popup\" style={{display:'none'}} > Email ou senha incorreta </div>\n                            <TextField type=\"text\" className=\"my-4\" id=\"standard-basic\" fullWidth label=\"Login\" onChange={e => setloguin(e.target.value)} error={stateerror} />\n                            <TextField type=\"password\" className=\"my-4\" id=\"standard-basic\" fullWidth label=\"Senha\" onChange={e => setpass(e.target.value)} error={stateerror} />\n                            <div className=\"level\">\n                                <div className=\"level-left\"></div>\n                                <div className=\"level-rigth\">\n                                    <div className=\"level-item\">\n                                        <button className=\"button has-background-light\" onClick={e => authlogin()} >Logar</button>\n                                    </div>\n                                </div>\n                            </div>\n                            <h2 className=\"mt-5\" >Não tem cadastro? <br /> Mande um email para <strong><a href=\"http://ghap@ufsj.edu.br\" target=\"blank\" className=\"has-text-black-bis\" >ghap@ufsj.edu.br</a></strong> </h2>\n                        </div>\n\n                    </div>\n                \n                </div>\n            </div>\n        </nav>\n    )\n\n}","import './App.css';\nimport './Layout/layout.css'\n// import \"bulma\";\n\n//pages\nimport Home from './Views/Home'\nimport Login from './Layout/login'\nimport {Route} from 'react-router-dom'\nimport { useState } from 'react';\n\n \nfunction App() {\n  \n  const [logged, setlogger] = useState(false)\n\n  const HandleClick = () =>{\n    setlogger(true)\n  }\n\n  return (\n    <div>\n      <Route exact path=\"/\"> <Login click={HandleClick} /> </Route>\n      <Route exact path=\"/home\"> <Home logged={logged}  /> </Route>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router> \n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}